// eslint-disable-next-line @typescript-eslint/no-require-imports
const path = require('path');

function getNames(filePath) {
  const basename = path.basename(filePath, path.extname(filePath));
  const exportName = /^\d/.test(basename) ? `Svg${basename}` : basename;

  let cleanExportName = exportName;

  // If the export name starts with Ic and is followed by a non letter, remove the "Ic" prefix
  if (cleanExportName.startsWith('Ic')) {
    const firstLetterIsSafe = /^[a-zA-Z]/.test(cleanExportName.slice(2));
    if (firstLetterIsSafe) {
      cleanExportName = cleanExportName.slice(2);
    }
  }

  return {
    basename,
    exportName: cleanExportName,
  };
}

function defaultIndexTemplate(filePaths) {
  return `
  // Do not edit this file, it is auto-generated at build time!
  // See scripts/generate-index-file.ts to modify the generation of this file.

  import dynamic from 'next/dynamic';

  ${filePaths
    .map(({ path: filePath }) => {
      const { basename, exportName } = getNames(filePath);
      return `import ${exportName} from './${basename}';`;
    })
    .join('\n')}

  export const staticIcons = {
    ${filePaths
      .map(({ path: filePath }) => {
        const { exportName } = getNames(filePath);
        return `${exportName},`;
      })
      .join('\n')}
  }

  export const icons = {
    ${filePaths
      .map(({ path: filePath }) => {
        const { basename, exportName } = getNames(filePath);
        return `${exportName}: dynamic(() => import('./${basename}')),`;
      })
      .join('\n')}
  } as const;

  export const iconNames = [
    ${filePaths
      .map(({ path: filePath }) => {
        const { exportName } = getNames(filePath);
        return `'${exportName}',`;
      })
      .join('\n')}
  ] as const;

  export default icons;
  `;
}

module.exports = defaultIndexTemplate;
